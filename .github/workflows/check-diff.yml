name: Check diff of HTML files
on:
  schedule:
    - cron: '*/10 * * * *'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write
jobs:
  backup:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests git-python beautifulsoup4
      - name: Configure Git user identity
        run: |
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          
      - name: Run backup script
        run: |
          python backup_script.py
      - name: Commit changes
        run: |
          now=$(date +"%d-%m-%Y %H-%M")
          git diff --quiet
          if [ $? -ne 0 ]; then
            git add .
            git commit -m "Article Datamining - $now"
            git push origin main
            echo "backup_updated=true" >> $GITHUB_OUTPUT
          else
            echo "backup_updated=false" >> $GITHUB_OUTPUT
          fi
  check-diff:
    runs-on: ubuntu-latest
    needs: backup
    steps:
      - uses: actions/checkout@v2
      - name: Check diff and post comments
        run: |
          if [ "$(git rev-parse HEAD)" = "$(git rev-list HEAD --max-parents=0)" ]; then exit 0; fi
          previous_commit=$(git rev-parse HEAD^)
          for file in $(git diff --name-only "${previous_commit}" | grep -E "*.html"); do
            # check for added files
            if [ ! -f "${file}" ] && [ "$(basename "${file}" .html)" != "$(basename "${file}")" ]; then
              python -c "import requests;requests.post(f'https://api.github.com/repos/{os.environ['GITHUB_REPOSITORY']}/commits/{os.environ['GITHUB_SHA']}/comments', headers={'Authorization': f'Bearer {os.environ['GITHUB_TOKEN']}','Accept':'application/vnd.github.v3+json'}, json={'body': '[HTML Diff Check] Added file: `{file}` in this commit.'})"
            # check for deleted files
            elif [ ! -f "${file}" ]; then
              python -c "import requests;requests.post(f'https://api.github.com/repos/{os.environ['GITHUB_REPOSITORY']}/commits/{os.environ['GITHUB_SHA']}/comments', headers={'Authorization': f'Bearer {os.environ['GITHUB_TOKEN']}','Accept':'application/vnd.github.v3+json'}, json={'body': '[HTML Diff Check] Deleted file: `{file}` in this commit.'})"
            else
              result=$(git diff --no-index --word-diff=porcelain "${file}" "${previous_commit}:${file}" | grep -E '^\+[^\+]|^\-[^\-]')
              # check for modified files
              if [ -n "${result}" ]; then
                python -c "import requests;requests.post(f'https://api.github.com/repos/{os.environ['GITHUB_REPOSITORY']}/commits/{os.environ['GITHUB_SHA']}/comments', headers={'Authorization': f'Bearer {os.environ['GITHUB_TOKEN']}','Accept':'application/vnd.github.v3+json'}, json={'body': f'[HTML Diff Check] Modified file: ```{result}``` in this commit.'})"
              fi
            fi
